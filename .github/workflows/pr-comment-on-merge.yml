name: Comment on PR Merge

on:
  pull_request_target:
    types:
      - closed

jobs:
  comment-on-merge:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Get PR Details
        id: pr_details
        run: |
          echo "pr_number=$(echo '${{ toJSON(github.event.pull_request) }}' | jq -r '.number')" >> $GITHUB_ENV
          echo "created_at=$(echo '${{ toJSON(github.event.pull_request) }}' | jq -r '.created_at')" >> $GITHUB_ENV
          echo "merged_at=$(echo '${{ toJSON(github.event.pull_request) }}' | jq -r '.merged_at')" >> $GITHUB_ENV

      - name: Calculate Metrics
        id: metrics
        run: |
          lines_added=$(echo '${{ toJSON(github.event.pull_request) }}' | jq -r '.additions')
          lines_deleted=$(echo '${{ toJSON(github.event.pull_request) }}' | jq -r '.deletions')
          duration=$(( ($(date -d "${{ env.merged_at }}" +%s) - $(date -d "${{ env.created_at }}" +%s)) / 3600 ))
          days=$(( duration / 24 ))
          hours=$(( duration % 24 ))
          echo "lines_added=$lines_added" >> $GITHUB_ENV
          echo "lines_deleted=$lines_deleted" >> $GITHUB_ENV
          echo "days=$days" >> $GITHUB_ENV
          echo "hours=$hours" >> $GITHUB_ENV

      - name: Get Comments and Reviewers
        id: comment_review_data
        uses: actions/github-script@v6
        with:
          script: |
            const prNumber = parseInt(process.env.pr_number);
            console.log(prNumber)
            // Fetch comments
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });
            console.log(comments)

            // Fetch reviewers
            const reviews = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
            });

            // Get unique commenters and truncate last 5 comments
            const uniqueCommenters = [...new Set(comments.data.map(comment => comment.user.login))];
            const lastFiveComments = comments.data
              .slice(-5)
              .map(comment => comment.body.substring(0, 20) + (comment.body.length > 20 ? '...' : ''));

            // Get reviewers
            const reviewers = [...new Set(reviews.data.map(review => review.user.login))];

            core.setOutput('comment_count', comments.data.length);
            core.setOutput('unique_commenters', uniqueCommenters.join(', '));
            core.setOutput('last_five_comments', lastFiveComments.join(' | '));
            core.setOutput('reviewers', reviewers.join(', '));

      - name: Post Comment
        uses: actions/github-script@v6
        with:
          script: |
            const prNumber = parseInt(process.env.pr_number);
            const linesAdded = process.env.lines_added;
            const linesDeleted = process.env.lines_deleted;
            const days = process.env.days;
            const hours = process.env.hours;
            const commentCount = core.getInput('comment_count');
            const uniqueCommenters = core.getInput('unique_commenters');
            const lastFiveComments = core.getInput('last_five_comments');
            const reviewers = core.getInput('reviewers');

            const durationString = days > 0 
              ? `${days} day(s) and ${hours} hour(s)` 
              : `${hours} hour(s)`;

            const comment = `
              🚀 PR #${prNumber} has been successfully merged! 🎉

              **Metrics:**
              - 📈 Lines Added: ${linesAdded}
              - 📉 Lines Deleted: ${linesDeleted}
              - 🕒 Time Open: ${durationString}
              - 💬 Total Comments: ${commentCount}
              - 🗣️ Commenters: ${uniqueCommenters}
              - 📝 Last 5 Comments: ${lastFiveComments}
              - 👀 Reviewers: ${reviewers}
            `;

            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: comment
            });
